<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>洛灵酱的小窝</title>
  
  <subtitle>想要变可爱</subtitle>
  <link href="https://blog.luoling8192.top/atom.xml" rel="self"/>
  
  <link href="https://blog.luoling8192.top/"/>
  <updated>2020-08-29T09:20:15.001Z</updated>
  <id>https://blog.luoling8192.top/</id>
  
  <author>
    <name>RainbowBird</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【题解】NOIP2000 进制转换</title>
    <link href="https://blog.luoling8192.top/posts/algorithm/noip2000-sys-convert.html"/>
    <id>https://blog.luoling8192.top/posts/algorithm/noip2000-sys-convert.html</id>
    <published>2020-08-28T04:25:39.000Z</published>
    <updated>2020-08-29T09:20:15.001Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="https://www.luogu.com.cn/problem/P1017">P1017 进制转换</a></p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>这道题考察的是负进制转换。</p><p>我们都知道，十进制转化为二进制应该不断用原数除以2取余，得到的余数由高位到低位排列则能得到十进制数字在二进制下的数字。</p><a id="more"></a><p>十进制转二进制的代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> binary[<span class="number">255</span>], cur = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (n &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    binary[++cur] = n % m;</span><br><span class="line">    n /= m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>其中n为十进制下的数字，m为需要转换的进制。</p></blockquote><p>那么当目标进制为负数的时候要注意什么呢？</p><p><strong>余数不能为负数</strong>。</p><p>例如，$(19)_{10}$要转换成$-9$进制。</p><p>$19/-9=-2…1$</p><p>$-2/-9=1…7$（注意这里不是<emp>$0...-2$</emp>！因为负数不能做余数。）</p><p>$1/-9=0…1$（当商为0时计算完成）</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* P1017 进制转换</span></span><br><span class="line"><span class="comment"> * 来源: NOIP2000</span></span><br><span class="line"><span class="comment"> * 作者: RainbowBird</span></span><br><span class="line"><span class="comment"> * 日期: 2020-08-28</span></span><br><span class="line"><span class="comment"> * 算法: 负进制转换</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> nums[<span class="number">20</span>] = &#123;<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;J&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, r;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;r);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d=&quot;</span>, n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> ans[<span class="number">10005</span>], cur = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n != <span class="number">0</span>) &#123; <span class="comment">// 注意这里是不等于，因为商可能为负数</span></span><br><span class="line">        <span class="keyword">int</span> mod = n % r; <span class="comment">// 获取余数</span></span><br><span class="line">        n /= r;          <span class="comment">// 获取商</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果余数小于0，那么商进一位，余数则等于进制数的绝对值减去余数的绝对值</span></span><br><span class="line">        <span class="keyword">if</span> (mod &lt; <span class="number">0</span>) n++, mod = <span class="built_in">abs</span>(r) - <span class="built_in">abs</span>(mod);</span><br><span class="line">        ans[cur++] = nums[mod];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 由高位到低位倒序输出</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, ans[i]); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;(base%d)\n&quot;</span>, r);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P1017&quot;&gt;P1017 进制转换&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目分析&quot;&gt;&lt;a href=&quot;#题目分析&quot; class=&quot;headerlink&quot; title=&quot;题目分析&quot;&gt;&lt;/a&gt;题目分析&lt;/h2&gt;&lt;p&gt;这道题考察的是负进制转换。&lt;/p&gt;
&lt;p&gt;我们都知道，十进制转化为二进制应该不断用原数除以2取余，得到的余数由高位到低位排列则能得到十进制数字在二进制下的数字。&lt;/p&gt;</summary>
    
    
    
    <category term="算法竞赛" scheme="https://blog.luoling8192.top/categories/algorithm/"/>
    
    
    <category term="题解" scheme="https://blog.luoling8192.top/tags/solution/"/>
    
    <category term="进制转换" scheme="https://blog.luoling8192.top/tags/sys-convert/"/>
    
  </entry>
  
  <entry>
    <title>【题解】USACO 愤怒的牛</title>
    <link href="https://blog.luoling8192.top/posts/algorithm/usaco-the-angry-bull.html"/>
    <id>https://blog.luoling8192.top/posts/algorithm/usaco-the-angry-bull.html</id>
    <published>2020-08-28T04:25:39.000Z</published>
    <updated>2020-08-29T09:40:10.979Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="https://loj.ac/problem/10011">「一本通 1.2 例 1」愤怒的牛</a></p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>所谓二分答案就是把所有的答案用二分的方法遍历一遍（前提是有序的单调序列），然后再用<code>check()</code>函数来判断答案的可行性。</p><div class="note info">            <p><span class='p yellow'>求最小值最大</span>或<span class='p yellow'>求最大值最小</span>是典型的二分答案。</p>          </div><p>要注意的是二分的边界。</p><blockquote><p>推荐阅读：<a href="https://blog.csdn.net/qq1515312832/article/details/105846202">二分查找怎么写，边界如何确定，我应该是要左边还是要右边，我为何如此的蠢？？？</a></p></blockquote><a id="more"></a><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* P10011 愤怒的牛</span></span><br><span class="line"><span class="comment"> * 来源: 信息学奥赛一本通 提高篇</span></span><br><span class="line"><span class="comment"> * 作者: RainbowBird</span></span><br><span class="line"><span class="comment"> * 日期: 2020-08-29</span></span><br><span class="line"><span class="comment"> * 算法: 二分答案</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> last = a[<span class="number">0</span>]; <span class="comment">// 先塞第一个牛棚</span></span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 遍历区间</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it = a.begin() + <span class="number">1</span>; it != a.end(); it++) &#123;</span><br><span class="line">        <span class="comment">// 如果当前的牛棚和上一个牛棚的距离大于或等于最大值</span></span><br><span class="line">        <span class="keyword">if</span> (*it - last &gt;= x) &#123;</span><br><span class="line">            last = *it;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果可以把牛全部放进牛棚</span></span><br><span class="line">        <span class="keyword">if</span> (count &gt;= m) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">        a.push_back(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sort(a.begin(), a.end(), less&lt;<span class="keyword">int</span>&gt;());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// [l, r]为闭区间</span></span><br><span class="line">    <span class="keyword">int</span> l = a[<span class="number">0</span>], r = a[n<span class="number">-1</span>]; <span class="comment">// l, r, mid都为距离</span></span><br><span class="line">    <span class="keyword">while</span> (l &lt;= r) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) / <span class="number">2</span>; <span class="comment">// mid为最短距离的最大值</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (check(mid)) l = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; r &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://loj.ac/problem/10011&quot;&gt;「一本通 1.2 例 1」愤怒的牛&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目分析&quot;&gt;&lt;a href=&quot;#题目分析&quot; class=&quot;headerlink&quot; title=&quot;题目分析&quot;&gt;&lt;/a&gt;题目分析&lt;/h2&gt;&lt;p&gt;所谓二分答案就是把所有的答案用二分的方法遍历一遍（前提是有序的单调序列），然后再用&lt;code&gt;check()&lt;/code&gt;函数来判断答案的可行性。&lt;/p&gt;
&lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;&lt;span class=&#39;p yellow&#39;&gt;求最小值最大&lt;/span&gt;或&lt;span class=&#39;p yellow&#39;&gt;求最大值最小&lt;/span&gt;是典型的二分答案。&lt;/p&gt;
          &lt;/div&gt;

&lt;p&gt;要注意的是二分的边界。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;推荐阅读：&lt;a href=&quot;https://blog.csdn.net/qq1515312832/article/details/105846202&quot;&gt;二分查找怎么写，边界如何确定，我应该是要左边还是要右边，我为何如此的蠢？？？&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="算法竞赛" scheme="https://blog.luoling8192.top/categories/algorithm/"/>
    
    
    <category term="题解" scheme="https://blog.luoling8192.top/tags/solution/"/>
    
    <category term="二分答案" scheme="https://blog.luoling8192.top/tags/binary-answer/"/>
    
  </entry>
  
  <entry>
    <title>【模板】双向BFS</title>
    <link href="https://blog.luoling8192.top/posts/algorithm/tamplate-twophase-bfs.html"/>
    <id>https://blog.luoling8192.top/posts/algorithm/tamplate-twophase-bfs.html</id>
    <published>2020-08-26T10:57:00.000Z</published>
    <updated>2020-08-26T11:17:19.130Z</updated>
    
    <content type="html"><![CDATA[<p>我们都知道BFS搜索的时间复杂度为$O(N^2)$。</p><p>而双向BFS搜索因为是从两边开始搜索，时间复杂度会优化很多，为朴素BFS的时间复杂度开根号。</p><p>下面请看模板代码。</p><a id="more"></a><p>输入样例：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5 5</span><br><span class="line">..###</span><br><span class="line">#....</span><br><span class="line">#.#.#</span><br><span class="line">#.#.#</span><br><span class="line">#.#..</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="keyword">int</span> nextn[<span class="number">4</span>][<span class="number">2</span>] = &#123;&#123;<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">-1</span>, <span class="number">0</span>&#125;, &#123;<span class="number">0</span>, <span class="number">-1</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">55</span>][<span class="number">55</span>], vst[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span>(a));</span><br><span class="line">    <span class="built_in">memset</span>(dis, <span class="number">0</span>, <span class="keyword">sizeof</span>(dis));</span><br><span class="line">    <span class="built_in">memset</span>(vst, <span class="number">0</span>, <span class="keyword">sizeof</span>(vst));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">queue</span>&lt;Node&gt; que1; <span class="comment">// 向前搜 </span></span><br><span class="line">    <span class="built_in">queue</span>&lt;Node&gt; que2; <span class="comment">// 向后搜 </span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// vst标记状态 dis表示路程 </span></span><br><span class="line">    que1.push(Node&#123;<span class="number">1</span>, <span class="number">1</span>&#125;), dis[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>, vst[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    que2.push(Node&#123;n, m&#125;), dis[n][m] = <span class="number">1</span>, vst[n][m] = <span class="number">2</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (!que1.empty() &amp;&amp; !que2.empty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> flag; </span><br><span class="line">        Node head;</span><br><span class="line">        <span class="keyword">if</span> (que1.size() &gt; que2.size()) &#123; <span class="comment">// 哪个队列元素少就从哪个队列开始搜 </span></span><br><span class="line">            head = que2.front(); <span class="comment">// 向前搜</span></span><br><span class="line">            que2.pop();</span><br><span class="line">            flag = <span class="number">2</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            head = que1.front(); <span class="comment">// 向后搜</span></span><br><span class="line">            que1.pop();</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">int</span> tx = head.x + nextn[i][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> ty = head.y + nextn[i][<span class="number">1</span>];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (tx &gt; n || ty &gt; m || tx &lt;= <span class="number">0</span> || ty &lt;= <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (a[tx][ty] == <span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!dis[tx][ty]) &#123; <span class="comment">// 这一步没有队列走过</span></span><br><span class="line">                    dis[tx][ty] = dis[head.x][head.y] + <span class="number">1</span>; <span class="comment">// 路程加一 </span></span><br><span class="line">                    vst[tx][ty] = vst[head.x][head.y]; <span class="comment">// 继承状态 </span></span><br><span class="line">                    <span class="keyword">if</span> (flag == <span class="number">1</span>) que1.push(Node&#123;tx, ty&#125;); </span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">2</span>) que2.push(Node&#123;tx, ty&#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (vst[head.x][head.y] + vst[tx][ty] == <span class="number">3</span>) &#123; <span class="comment">// 如果相遇 </span></span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; dis[head.x][head.y] + dis[tx][ty] &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 步数相加 </span></span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;我们都知道BFS搜索的时间复杂度为$O(N^2)$。&lt;/p&gt;
&lt;p&gt;而双向BFS搜索因为是从两边开始搜索，时间复杂度会优化很多，为朴素BFS的时间复杂度开根号。&lt;/p&gt;
&lt;p&gt;下面请看模板代码。&lt;/p&gt;</summary>
    
    
    
    <category term="算法竞赛" scheme="https://blog.luoling8192.top/categories/algorithm/"/>
    
    
    <category term="模板" scheme="https://blog.luoling8192.top/tags/template/"/>
    
    <category term="搜索" scheme="https://blog.luoling8192.top/tags/search/"/>
    
  </entry>
  
  <entry>
    <title>【题解】NOIP2003 乒乓球</title>
    <link href="https://blog.luoling8192.top/posts/algorithm/noip2003-table-tennis.html"/>
    <id>https://blog.luoling8192.top/posts/algorithm/noip2003-table-tennis.html</id>
    <published>2020-08-23T09:58:38.000Z</published>
    <updated>2020-08-23T10:04:08.401Z</updated>
    
    <content type="html"><![CDATA[<p>这道题我交了好几次，果然还是太菜了（</p><p>说一下注意的点吧：</p><ul><li>要特判一下只有<code>E</code>的情况，应该输出<code>0:0</code></li><li>这里的11分制是指其中一个人有11分而不是总共11分</li><li>要注意刚好比完一场还需要进行下一场，如果下一场没有数据应该输出<code>0:0</code></li></ul><a id="more"></a><p>具体请看代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* P1217 乒乓球</span></span><br><span class="line"><span class="comment"> * 作者: RainbowBird</span></span><br><span class="line"><span class="comment"> * 日期: 2020-08-18</span></span><br><span class="line"><span class="comment"> * 算法: 模拟</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, game[<span class="number">25</span> * <span class="number">2500</span> + <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 读入数据</span></span><br><span class="line">    <span class="built_in">memset</span>(game, <span class="number">0</span>, <span class="keyword">sizeof</span>(game));</span><br><span class="line">    <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch != <span class="string">&#x27;E&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;W&#x27;</span>) game[++n] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;L&#x27;</span>) game[++n] = <span class="number">2</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>) n = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 11分制</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (k &lt;= n + <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 进行一轮比赛</span></span><br><span class="line">            <span class="keyword">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, i = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (k &lt;= n + <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> ((a &gt;= <span class="number">11</span> || b &gt;= <span class="number">11</span>) &amp;&amp; <span class="built_in">abs</span>(a-b) &gt;= <span class="number">2</span>) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (game[k] == <span class="number">1</span>) a++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (game[k] == <span class="number">2</span>) b++;</span><br><span class="line"></span><br><span class="line">                k++, i++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 结束这一轮比赛</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d:%d\n&quot;</span>, a, b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 21分制</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (k &lt;= n + <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 进行一轮比赛</span></span><br><span class="line">            <span class="keyword">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, i = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (k &lt;= n + <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> ((a &gt;= <span class="number">21</span> || b &gt;= <span class="number">21</span>) &amp;&amp; <span class="built_in">abs</span>(a-b) &gt;= <span class="number">2</span>) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (game[k] == <span class="number">1</span>) a++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (game[k] == <span class="number">2</span>) b++;</span><br><span class="line"></span><br><span class="line">                k++, i++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 结束这一轮比赛</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d:%d\n&quot;</span>, a, b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;这道题我交了好几次，果然还是太菜了（&lt;/p&gt;
&lt;p&gt;说一下注意的点吧：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;要特判一下只有&lt;code&gt;E&lt;/code&gt;的情况，应该输出&lt;code&gt;0:0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;这里的11分制是指其中一个人有11分而不是总共11分&lt;/li&gt;
&lt;li&gt;要注意刚好比完一场还需要进行下一场，如果下一场没有数据应该输出&lt;code&gt;0:0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="算法竞赛" scheme="https://blog.luoling8192.top/categories/algorithm/"/>
    
    
    <category term="题解" scheme="https://blog.luoling8192.top/tags/solution/"/>
    
  </entry>
  
  <entry>
    <title>【模板】高精度模板</title>
    <link href="https://blog.luoling8192.top/posts/algorithm/high-precision-template.html"/>
    <id>https://blog.luoling8192.top/posts/algorithm/high-precision-template.html</id>
    <published>2020-08-23T09:57:15.000Z</published>
    <updated>2020-08-28T09:28:45.992Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>高精度加、减、乘（高精乘高精）、除（高精除以高精）模板。</p><a id="more"></a><h2 id="高精度加法"><a href="#高精度加法" class="headerlink" title="高精度加法"></a>高精度加法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">add</span><span class="params">(<span class="built_in">string</span> a, <span class="built_in">string</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> na[<span class="number">105</span>], nb[<span class="number">105</span>], nc[<span class="number">10005</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(na, <span class="number">0</span>, <span class="keyword">sizeof</span>(na));</span><br><span class="line">    <span class="built_in">memset</span>(nb, <span class="number">0</span>, <span class="keyword">sizeof</span>(nb));</span><br><span class="line">    <span class="built_in">memset</span>(nc, <span class="number">0</span>, <span class="keyword">sizeof</span>(nc));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> lena = a.length(), lenb = b.length();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lena; i++) na[i] = a[lena-i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lenb; i++) nb[i] = b[lenb-i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lena + lenb; i++) &#123;</span><br><span class="line">        nc[i] += na[i] + nb[i];</span><br><span class="line">        <span class="keyword">if</span> (nc[i] &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">            nc[i+<span class="number">1</span>]++;</span><br><span class="line">            nc[i] -= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> lenc = lena + lenb + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (lenc &gt; <span class="number">0</span> &amp;&amp; nc[--lenc] == <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> c[<span class="number">10005</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = lenc; i &gt;= <span class="number">1</span>; i--) c[lenc-i] = nc[i] + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="高精度减法"><a href="#高精度减法" class="headerlink" title="高精度减法"></a>高精度减法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">sub</span><span class="params">(<span class="built_in">string</span> a, <span class="built_in">string</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> na[<span class="number">105</span>], nb[<span class="number">105</span>], nc[<span class="number">10005</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(na, <span class="number">0</span>, <span class="keyword">sizeof</span>(na));</span><br><span class="line">    <span class="built_in">memset</span>(nb, <span class="number">0</span>, <span class="keyword">sizeof</span>(nb));</span><br><span class="line">    <span class="built_in">memset</span>(nc, <span class="number">0</span>, <span class="keyword">sizeof</span>(nc));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> lena = a.length(), lenb = b.length();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lena; i++) na[i] = a[lena-i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lenb; i++) nb[i] = b[lenb-i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lena + lenb; i++) &#123;</span><br><span class="line">        nc[i] += na[i] - nb[i];</span><br><span class="line">        <span class="keyword">if</span> (nc[i] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            nc[i+<span class="number">1</span>]--;</span><br><span class="line">            nc[i] += <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> lenc = lena + lenb + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (lenc &gt; <span class="number">0</span> &amp;&amp; nc[--lenc] == <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> c[<span class="number">10005</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = lenc; i &gt;= <span class="number">1</span>; i--) c[lenc-i] = nc[i] + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="高精度乘法"><a href="#高精度乘法" class="headerlink" title="高精度乘法"></a>高精度乘法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">mul</span><span class="params">(<span class="built_in">string</span> a, <span class="built_in">string</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> na[<span class="number">105</span>], nb[<span class="number">105</span>], nc[<span class="number">10005</span>];</span><br><span class="line">    <span class="keyword">int</span> lena = a.length(), lenb = b.length();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(na, <span class="number">0</span>, <span class="keyword">sizeof</span>(na));</span><br><span class="line">    <span class="built_in">memset</span>(nb, <span class="number">0</span>, <span class="keyword">sizeof</span>(nb));</span><br><span class="line">    <span class="built_in">memset</span>(nc, <span class="number">0</span>, <span class="keyword">sizeof</span>(nc));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lena; i++)</span><br><span class="line">        na[i] = a[lena - i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lenb; i++)</span><br><span class="line">        nb[i] = b[lenb - i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lena; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= lenb; j++) &#123;</span><br><span class="line">            nc[i+j<span class="number">-1</span>] += na[i] * nb[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; lena + lenb; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (nc[i] &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">            nc[i+<span class="number">1</span>] += nc[i] / <span class="number">10</span>;</span><br><span class="line">            nc[i] %= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> lenc = lena + lenb + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (nc[--lenc] == <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> c[<span class="number">10005</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = lenc; i &gt;= <span class="number">1</span>; i--) c[lenc-i] = nc[i] + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="高精度除法"><a href="#高精度除法" class="headerlink" title="高精度除法"></a>高精度除法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> b[], <span class="keyword">int</span> last, <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a[last+len] != <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// 如果被除数的位数比除数大</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 逐位比较</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = len; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i+last<span class="number">-1</span>] &gt; b[i]) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (a[i+last<span class="number">-1</span>] &lt; b[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 相等返回true</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">div</span><span class="params">(<span class="built_in">string</span> a, <span class="built_in">string</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 声明变量</span></span><br><span class="line">    <span class="keyword">int</span> lena = a.length(), lenb = b.length(), lenc = lena - lenb + <span class="number">2</span>, lend = max(lena, lenb) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 清空变量</span></span><br><span class="line">    <span class="built_in">memset</span>(na, <span class="number">0</span>, <span class="keyword">sizeof</span>(na));</span><br><span class="line">    <span class="built_in">memset</span>(nb, <span class="number">0</span>, <span class="keyword">sizeof</span>(nb));</span><br><span class="line">    <span class="built_in">memset</span>(nc, <span class="number">0</span>, <span class="keyword">sizeof</span>(nc)); <span class="comment">// 商</span></span><br><span class="line">    <span class="built_in">memset</span>(nd, <span class="number">0</span>, <span class="keyword">sizeof</span>(nd)); <span class="comment">// 余数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 把数字倒过来存</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lena; i++) na[i] = a[lena-i] - <span class="string">&#x27;0&#x27;</span>, nd[i] = na[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lenb; i++) nb[i] = b[lenb-i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="comment">//for (int i = 1; i &lt;= lena; i++) nd[i] = na[i]; // 存余数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 高精度除法 </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = lena - lenb + <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123; <span class="comment">// 被除数和除数对齐</span></span><br><span class="line">        <span class="comment">/* 456 / 12</span></span><br><span class="line"><span class="comment">         *      38</span></span><br><span class="line"><span class="comment">         * 12 |----</span></span><br><span class="line"><span class="comment">         *     456</span></span><br><span class="line"><span class="comment">         *     36</span></span><br><span class="line"><span class="comment">         *     ----</span></span><br><span class="line"><span class="comment">         *      96</span></span><br><span class="line"><span class="comment">         *      96</span></span><br><span class="line"><span class="comment">         *     ----</span></span><br><span class="line"><span class="comment">         *       0</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 可以相减</span></span><br><span class="line">        <span class="keyword">while</span> (cmp(nd, nb, i, lenb)) &#123;</span><br><span class="line">            <span class="comment">// 高精度减法</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= lenb; j++) &#123;</span><br><span class="line">                nd[i+j<span class="number">-1</span>] -= nb[j];</span><br><span class="line">                <span class="keyword">if</span> (nd[i+j<span class="number">-1</span>] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                    nd[i+j]--;</span><br><span class="line">                    nd[i+j<span class="number">-1</span>] += <span class="number">10</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            nc[i]++; <span class="comment">// 商进一位</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出商</span></span><br><span class="line">    <span class="keyword">while</span> (nc[--lenc] == <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (lenc &lt;= <span class="number">0</span>) lenc++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = lenc; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; nc[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出余数</span></span><br><span class="line">    <span class="keyword">while</span> (nd[--lend] == <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (lend &lt;= <span class="number">0</span>) lend++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = lend; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; nd[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;高精度加、减、乘（高精乘高精）、除（高精除以高精）模板。&lt;/p&gt;</summary>
    
    
    
    <category term="算法竞赛" scheme="https://blog.luoling8192.top/categories/algorithm/"/>
    
    
    <category term="模板" scheme="https://blog.luoling8192.top/tags/template/"/>
    
    <category term="高精度" scheme="https://blog.luoling8192.top/tags/high-precision/"/>
    
  </entry>
  
  <entry>
    <title>欢迎</title>
    <link href="https://blog.luoling8192.top/posts/daily/welcome.html"/>
    <id>https://blog.luoling8192.top/posts/daily/welcome.html</id>
    <published>2020-08-23T04:13:58.000Z</published>
    <updated>2020-08-28T04:35:59.403Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>欢迎来到我的博客！</p><p><a href="http://blog.luoling8192.top:82/about/">关于我</a></p><p>2020年8月22日之前的博客在<a href="https://www.cnblogs.com/luoling8192/">博客园</a>可以找到。</p><a id="more"></a>]]></content>
    
    
    <summary type="html">&lt;p&gt;欢迎来到我的博客！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.luoling8192.top:82/about/&quot;&gt;关于我&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2020年8月22日之前的博客在&lt;a href=&quot;https://www.cnblogs.com/luoling8192/&quot;&gt;博客园&lt;/a&gt;可以找到。&lt;/p&gt;</summary>
    
    
    
    <category term="日常" scheme="https://blog.luoling8192.top/categories/daily/"/>
    
    
  </entry>
  
</feed>
